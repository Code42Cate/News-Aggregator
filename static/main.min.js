function addLabelEventListener(e){const t=document.getElementById("modal-labels-set");t.innerHTML="<p>Existing labels: </p>";const a=e.target.parentElement.parentElement.children[0].children;for(let e of a)t.innerHTML+=`${e.outerHTML} `}function addNewLabel(){const e=document.getElementById("newLabelInput").value,t=e.replace(" ","").toLowerCase(),a=document.getElementById("labelselect"),n=`<span class="badge ${t} standard" id="${t}-label" draggable="true" ondragstart="drag(event)">${e}</span>`;a.innerHTML+=n,document.getElementById("newLabelInput").value="",document.getElementById("cancelButton").click()}function updateKeyword(e,t){fetch(`http://localhost:5000/api/v1/categories/${e}`,{body:JSON.stringify({category:t}),method:"PATCH",headers:{"Content-Type":"application/json"}}).then(e=>{console.log(e)})}function allowDrop(e){e.preventDefault()}function drag(e){e.dataTransfer.setData("text/html",e.target.id)}function drop(e){e.preventDefault();var t=e.dataTransfer.getData("text/html"),a=document.getElementById(t).cloneNode(!0);a.removeAttribute("id"),a.removeAttribute("draggable"),a.removeEventListener("dragstart",drag);const n=e.target.innerText,r=a.innerText;e.target.parentNode.replaceChild(a,e.target),updateKeyword(n,r)}function remove(e){e.target.remove()}function showKeywords(e){const t=e.path[2].cells[1].children[0].dataset.collapsed;if("true"===t){e.path[2].cells[1].children[0].dataset.collapsed=!1;const t=e.path[2].cells[1].children[0].dataset.id;articles.forEach(a=>{let n="";a.id===t&&(a.keywords.forEach(e=>{n+=`<div class="inline keyword" ondrop="drop(event)" ondragover="allowDrop(event)" ondblclick="removeKeyword(event)">${e}</div>`}),e.target.parentElement.innerHTML+=n)})}else{e.path[2].cells[1].children[0].dataset.collapsed=!0;let t=[];for(let a of e.target.parentElement.children)a.classList.contains("keyword")&&t.push(a);for(let e of t)e.remove()}}function removeKeyword(e){const t=e.target.innerText,a=e.path[2].cells[1].children[0].dataset.id;fetch(`http://localhost:5000/api/v1/article/${a}`,{body:JSON.stringify({keyword:t}),method:"PATCH",headers:{"Content-Type":"application/json"}}).then(e=>{console.log(e)}),e.target.remove()}document.getElementById("addlabel").addEventListener("click",addLabelEventListener);const firstLetterToUpperCase=e=>e[0].toUpperCase()+e.substring(1),colourArray=["Red","Pink","Purple","Deep Purple","Indigo","Blue","Light Blue","Cyan","Teal","Green","Light Green","Lime","Yellow","Amber","Orange","Deep Orange","Brown","Grey","Blue Grey","Black","White"],random=(e,t)=>Math.floor(Math.random()*(t-e+1))+e;let articles;(async()=>{const e="http://localhost:5000/api/v1/articles";let t=[];const a=async()=>{articles=await(await fetch(e)).json();const a={};let n=0;articles.forEach(e=>{e.categories.forEach(e=>{void 0===a[e]&&(a[e]=colourArray[n],n+=1,n===colourArray.length&&(n=0))})});const r=document.getElementById("articletable");let o=articles.length;articles.forEach(e=>{const n=r.insertRow(0),l=(n.insertCell(0).innerHTML=o,n.insertCell(1).innerHTML=`<a href="${e.url}" data-id="${e.id}" data-collapsed="true" >${e.title}</a>`,n.insertCell(2));l.className+=(l.className?" ":"")+"keywords";let s="";e.categories.forEach(e=>{t.push(e);const n=a[e];s+=`<span class="badge" style="background-color: ${palette.get(n,"700")};color:${palette.getText(n,"500","Secondary")};font-size:87%;">${firstLetterToUpperCase(e)}</span>`}),e.categories.length<2?e.keywords.forEach(e=>{s+=`<div class="inline keyword" ondrop="drop(event)" ondragover="allowDrop(event)" ondblclick="removeKeyword(event)">${e}</div>`}):e.keywords.length>0&&(s+='<span class="badge" style="background-color: #424242;color:#fff;font-size:87%;" onclick="showKeywords(event)";>...</span>'),l.innerHTML=s,o-=1}),t=t.filter((e,a)=>t.indexOf(e)===a);const l=document.getElementById("labelselect");t.forEach(e=>{const t=a[e],n=`<span class="badge" id="${e}" style="background-color: ${palette.get(t,"700")}; color:${palette.getText(t,"500","Secondary")}; font-size:87%;" draggable="true" ondragstart="drag(event)">${firstLetterToUpperCase(e)}</span>`;l.innerHTML+=n})};a()})();